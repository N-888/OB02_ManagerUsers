import tkinter as tk  # üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å Tkinter –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è GUI
from tkinter import messagebox, simpledialog  # üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥–æ–≤—ã–µ –æ–∫–Ω–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Tkinter
import logging  # üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ —Ñ–∞–π–ª

# üìë –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª 'user_management.log'
logging.basicConfig(filename='user_management.log', level=logging.INFO,
                    format='%(asctime)s - %(levelname)s - %(message)s')


class User:
    """
    üìå –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å User ‚Äî –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–º–ø–∞–Ω–∏–∏.
    –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç ID, –∏–º—è –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞.
    """
    def __init__(self, user_id, name):
        self._user_id = user_id  # –∑–∞—â–∏—â—ë–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self._name = name  # –∑–∞—â–∏—â—ë–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self._access_level = 'user'  # –∑–∞—â–∏—â—ë–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'user')

    def get_user_id(self):
        """üìå –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        return self._user_id

    def get_name(self):
        """üìå –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        return self._name

    def get_access_level(self):
        """üìå –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        return self._access_level


class Admin(User):
    """
    üìå –ö–ª–∞—Å—Å Admin ‚Äî –Ω–∞—Å–ª–µ–¥—É–µ—Ç –æ—Ç User.
    –î–æ–±–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å–∏—Å—Ç–µ–º—ã.
    """
    def __init__(self, user_id, name):
        super().__init__(user_id, name)  # üìå –ù–∞—Å–ª–µ–¥—É–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è
        self._access_level = 'admin'  # üìå –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ 'admin'

    def add_user(self, target_list, new_user):
        """
        üìå –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫.
        :param target_list: —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        :param new_user: —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ User
        """
        target_list.append(new_user)  # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫
        # üìå –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –ª–æ–≥
        logging.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {self._name} –¥–æ–±–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {new_user.get_name()} (ID: {new_user.get_user_id()})")

    def remove_user(self, target_list, user_id):
        """
        üìå –ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID.
        :param target_list: —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        :param user_id: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        :return: True –µ—Å–ª–∏ —É–¥–∞–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, –∏–Ω–∞—á–µ False
        """
        for u in target_list:  # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if u.get_user_id() == user_id:
                target_list.remove(u)  # —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞
                # üìå –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
                logging.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {self._name} —É–¥–∞–ª–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {u.get_name()} (ID: {user_id})")
                return True  # —É—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
        return False  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω


class UserManagerGUI:
    """
    üìå –ö–ª–∞—Å—Å GUI –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Tkinter.
    """
    def __init__(self, root, admin):
        self.root = root  # üìå –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        self.admin = admin  # üìå –∞–∫—Ç–∏–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        self.users = []  # üìå —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

        # üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞
        self.root.title("–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")

        # üìå –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≤–∏–¥–µ Listbox
        self.user_listbox = tk.Listbox(root, width=50)
        self.user_listbox.pack(pady=10)

        # üìå –ë–ª–æ–∫ –∫–Ω–æ–ø–æ–∫
        btn_frame = tk.Frame(root)
        btn_frame.pack(pady=5)

        # üìå –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        tk.Button(btn_frame, text="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", command=self.add_user).pack(side=tk.LEFT, padx=5)

        # üìå –ö–Ω–æ–ø–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        tk.Button(btn_frame, text="–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", command=self.remove_user).pack(side=tk.LEFT, padx=5)

        # üìå –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
        tk.Button(btn_frame, text="–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫", command=self.refresh_list).pack(side=tk.LEFT, padx=5)

        # üìå –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ª–æ–≥–∞ –¥–µ–π—Å—Ç–≤–∏–π
        tk.Button(root, text="–û—Ç–∫—Ä—ã—Ç—å –ª–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π", command=self.show_logs).pack(pady=5)

    def add_user(self):
        """üìå –ú–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥–æ–≤—ã–µ –æ–∫–Ω–∞."""
        try:
            user_id = simpledialog.askinteger("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
            if user_id is None:  # –æ—Ç–º–µ–Ω–∞ –≤–≤–æ–¥–∞
                return
            name = simpledialog.askstring("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
            if not name:
                return
            new_user = User(user_id, name)  # —Å–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä User
            self.admin.add_user(self.users, new_user)  # –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            self.refresh_list()  # –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤ –æ–∫–Ω–µ
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", str(e))  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π

    def remove_user(self):
        """üìå –ú–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ."""
        try:
            user_id = simpledialog.askinteger("–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
            if user_id is None:
                return
            success = self.admin.remove_user(self.users, user_id)  # –ø—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if success:
                messagebox.showinfo("–£—Å–ø–µ—Ö", f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} —É–¥–∞–ª—ë–Ω.")
            else:
                messagebox.showwarning("–ù–µ –Ω–∞–π–¥–µ–Ω", f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            self.refresh_list()  # –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", str(e))

    def refresh_list(self):
        """üìå –û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ Listbox."""
        self.user_listbox.delete(0, tk.END)  # –æ—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫
        for u in self.users:  # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            display_text = f"ID: {u.get_user_id()} | –ò–º—è: {u.get_name()} | –î–æ—Å—Ç—É–ø: {u.get_access_level()}"
            self.user_listbox.insert(tk.END, display_text)  # –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ Listbox

    def show_logs(self):
        """üìå –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª–æ–≥-—Ñ–∞–π–ª–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –æ–∫–Ω–µ."""
        try:
            with open('user_management.log', 'r', encoding='utf-8') as f:
                logs = f.read()  # —á–∏—Ç–∞–µ–º —Ñ–∞–π–ª –ª–æ–≥–æ–≤
            log_window = tk.Toplevel(self.root)  # —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ
            log_window.title("–õ–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π")
            text = tk.Text(log_window, wrap=tk.WORD)  # —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –ª–æ–≥–æ–≤
            text.insert(tk.END, logs)  # –≤—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ª–æ–≥–æ–≤
            text.pack(expand=True, fill=tk.BOTH)  # —Ä–∞–∑–º–µ—â–∞–µ–º –Ω–∞ –≤–µ—Å—å —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
        except FileNotFoundError:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–õ–æ–≥-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")


# üì¶ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π
if __name__ == "__main__":
    root = tk.Tk()  # —Å–æ–∑–¥–∞—ë–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    admin = Admin(1, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")  # —Å–æ–∑–¥–∞—ë–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å ID 1
    gui = UserManagerGUI(root, admin)  # —Å–æ–∑–¥–∞—ë–º GUI –∏ –ø–µ—Ä–µ–¥–∞—ë–º –µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    root.mainloop()  # –∑–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
